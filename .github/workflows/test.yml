name: test
on:
  workflow_dispatch:
    inputs:
      dart_sdk:
        description: 'Dart Version'
        required: false
        default: 'stable'
        type: string
  workflow_call:
    inputs:
      dart_sdk:
        required: false
        default: 'stable'
        type: string

jobs:
  release-server:
    name: Release Server for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            output: "build/releases/example-v0.0.1-alpha.1-linux-amd64.tar.gz"
          - os: windows-latest
            platform: windows
            output: "build/releases/example-v0.0.1-alpha.1-windows-amd64.tar.gz"
          - os: macos-latest
            platform: macos
            output: "build/releases/example-v0.0.1-alpha.1-macos-arm64.tar.gz"
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.dart_sdk }}
      - name: Create Example app
        run: dart create -t console example
      - name: Build Linux app with dart-release-action
        uses: ./
        with:
          token: ${{ github.token }}
          dry-run: true
          main-path: 'bin/example.dart'
          app-name: 'example'
          app-version: 'v0.0.1-alpha.1'
          tag: 'v0.0.1-alpha.1'
          build-args: |-
            --define=DB_USER="user"
            --define=DB_PASSWORD=12345678
          include-paths: |-
            test
            README.md
          working-directory: ./example
      - name: Check file
        working-directory: ./example
        shell: bash
        run: |
          [ -f "${{ matrix.output }}" ] && exit 0 || exit 1

